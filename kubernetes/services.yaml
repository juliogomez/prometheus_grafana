apiVersion: v1
kind: Service
metadata:
  labels:
    service: postgres
  name: postgres
spec:
  type: ClusterIP
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    service: postgres
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: postgres
  name: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
      - image: postgres:9
        name: postgres
        ports:
        - containerPort: 5432
          name: pg-scrape
        env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: password
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: postgres-e
  name: postgres-e
spec:
  type: ClusterIP
  ports:
  - name: "9187"
    port: 9187
    targetPort: 9187
  selector:
    service: postgres-e
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: postgres-e
  name: postgres-e
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: postgres-e
    spec:
      containers:
      - image: wrouesnel/postgres_exporter:v0.2.3
        name: postgres-e
        ports:
        - containerPort: 9187
          name: pg-scrape-e
        env:
          - name: DATA_SOURCE_NAME
            value: postgresql://postgres:password@postgres/?sslmode=disable
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: prometheus
  name: prometheus
spec:
  type: LoadBalancer
  ports:
  - name: "9090"
    port: 9090
    targetPort: 9090
  selector:
    service: prometheus
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: prometheus
  name: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: prometheus
    spec:
      containers:
      - args:
        - -config.file=/etc/prometheus/prometheus.yml
        - -storage.local.path=/prometheus
        - -web.console.libraries=/etc/prometheus/console_libraries
        - -web.console.templates=/etc/prometheus/consoles
        image: prom/prometheus:v1.8.2
        name: prometheus
        volumeMounts:
        - mountPath: /etc/prometheus/prometheus.yml
          name: prom-config
        ports:
        - containerPort: 9090
          name: prom-scrape
      volumes:
      - name: prom-config
        hostPath:
          path: /prometheus_grafana/kubernetes/prometheus.yml
          type: File
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: cadvisor
  name: cadvisor
spec:
  clusterIP: None
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
  selector:
    service: cadvisor
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    service: cadvisor
  name: cadvisor
spec:
  template:
    metadata:
      name: cadvisor
      labels:
        service: cadvisor
    spec:
      containers:
      - image: google/cadvisor:v0.26.1
        name: cadvisor
        ports:
        - containerPort: 8080
          hostPort: 8080
          name: cadvisor-scrape
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: node-exporter
  name: node-exporter
spec:
  clusterIP: None
  ports:
  - name: "9100"
    port: 9100
    protocol: TCP
  selector:
    service: node-exporter
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    service: node-exporter
  name: node-exporter
spec:
  template:
    metadata:
      name: node-exporter
      labels:
        service: node-exporter
    spec:
      containers:
      - image: prom/node-exporter
        name: node-exporter
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: node-exp-scrape
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: traefik
  name: traefik
spec:
  clusterIP: None
  ports:
  - name: "80"
    port: 80
    protocol: TCP
  selector:
    service: traefik
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    service: traefik
  name: traefik
spec:
  template:
    metadata:
      name: traefik
      labels:
        service: traefik
    spec:
      containers:
      - args:
        - --debug
        - --web.metrics
        - --web.metrics.prometheus
        image: traefik:v1.4-alpine
        name: traefik
        ports:
        - containerPort: 80
          hostPort: 80
          name: traefik-scrape